# OPNpool

recorder:
  include:
    entities:
      - switch.opnpool_pool
      - switch.opnpool_aux1
      - switch.opnpool_aux2
      - sensor.opnpool_water_temp
      - sensor.opnpool_chlor_salt
      - sensor.opnpool_air_temp
      - sensor.opnpool_air_temp_min
      - sensor.opnpool_air_temp_max

sensor:
  - platform: statistics
    name: sensor.opnpool_air_temp_min
    entity_id: sensor.opnpool_air_temp
    state_characteristic: value_min
    max_age:
      hours: 24
  - platform: statistics
    name: sensor.opnpool_air_temp_max
    entity_id: sensor.opnpool_air_temp
    state_characteristic: value_max
    max_age:
      hours: 24

template:
  - sensor:
      - name: opnpool_pump_estimated_flow
        unit_of_measurement: gpm
        state: |
          {% set pump_power = states('sensor.opnpool_pump_power') | float(0) %}
          {% set pump_speed = states("sensor.opnpool_pump_speed") | float(0) %}
          {% if pump_speed > 0 %}
          {{   ((pump_power - (1377 * ((pump_speed)/3450)**3) - 75.3) / (12.5 * ((pump_speed)/3450)**2)) | round(0) }}
          {% endif %}
      - name: opnpool_estimated_volume
        unit_of_measurement: G
        state: '{{ 20000 }}'
      - name: opnpool_recommended_runtime
        unit_of_measurement: h
        state: |
          {% set air_temp = states("sensor.opnpool_water_temp") | float(0) %}
          {% if air_temp > 0 %}
          {{   (air_temp / 10) | round(0) }}
          {% endif %}
  - binary_sensor:
      - name: opnpool_chlor_status_fault
        state: '{{ states("sensor.opnpool_chlor_status") != "OK" }}'
      - name: opnpool_chlor_salt_fault
        state: '{{ (states("sensor.opnpool_chlor_salt")|float(0) < 2700) or (states("sensor.opnpool_chlor_salt")|float(0) > 4500)  }}'
      - name: opnpool_pump_status_fault
        state: '{{ states("sensor.opnpool_pump_status") != "OK" }}'
      - name: opnpool_pump_error_fault
        state: '{{ states("sensor.opnpool_pump_error")|float(0) != 0 }}'
      - name: pool_chemistry
        state: '{{ states("sensor.pool_ph") != "unavailable" }}'

sensor:
  - platform: poolmath
    url: https://api.poolmathapp.com/share/qVWpMm0

# take heater so Google Assistant can read the outside temperature
input_boolean:
  fake_heater:
    name: Fake Heater
    icon: mdi:toggle-switch-off
    initial: on

climate:
  - platform: generic_thermostat
    name: Outside air
    heater: input_boolean.fake_heater
    target_sensor: sensor.opnpool_air_temp
    min_temp: 20
    max_temp: 120

google_assistant:
  entity_config:
    switch.opnpool_pool_circuit:
      name: Circuit
      room: Pool
    switch.opnpool_spa_circuit:
      name: Circuit
      room: Pool
      aliases:
        - Spa
    switch.opnpool_aux1_circuit:
      name: Pump
      room: Pool
    switch.opnpool_aux2_circuit:
      name: Light
      room: Pool
    climate.outside_air:
      name: temperature
      room: Outside
    climate.opnpool_pool_heater:
      name: water
      room: Pool
